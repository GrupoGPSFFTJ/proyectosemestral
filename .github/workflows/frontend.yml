name: Build & Push Frontend

on:
  push:
    branches:
      - main
    paths:
      - frontend/**
      - frontend/package*.json
      - frontend/nginx.conf
  pull_request:
    branches:
      - main
    paths:
      - frontend/**
      - frontend/package*.json
      - frontend/nginx.conf
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
            -u "${{ secrets.DOCKERHUB_USERNAME }}" \
            --password-stdin

      - name: Build & Push Frontend
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
          docker build \
            -f frontend/Dockerfile \
            -t $IMAGE \
            frontend
          docker push $IMAGE

      - name: Write Kube config files
        run: |
          echo "${{ secrets.KUBE_CERTIFICATE_AUTHORITY }}" > ca.crt
          echo "${{ secrets.KUBE_CLIENT_CERTIFICATE }}" > client.crt
          echo "${{ secrets.KUBE_CLIENT_KEY }}" > client.key

      - name: Use kubectl
        env:
          KUBE_SERVER: ${{ secrets.KUBE_SERVER }}
        run: |
          kubectl --server=$KUBE_SERVER \
            --certificate-authority=ca.crt \
            --client-certificate=client.crt \
            --client-key=client.key get nodes

      - name: Clean up
        run: |
          rm ca.crt client.crt client.key

      - name: Restart Frontend Deployment
        env:
          KUBE_SERVER: ${{ secrets.KUBE_SERVER }}
        run: |
          kubectl --server=$KUBE_SERVER \
            --certificate-authority=ca.crt \
            --client-certificate=client.crt \
            --client-key=client.key \
            rollout restart deployment/frontend --namespace=${{ secrets.KUBE_NAMESPACE }}
          echo "Frontend deployment restarted."


