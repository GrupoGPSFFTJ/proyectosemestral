name: CI del proyecto

on: {}

jobs:
  # 1) Login a Docker Hub
  docker-login:
    runs-on: ubuntu-latest
    outputs:
      logged: ${{ steps.login.outcome }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
            -u "${{ secrets.DOCKERHUB_USERNAME }}" \
            --password-stdin

  # 2) Build & Push de todos los microservicios
  build-core-service:
    needs: docker-login
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
            -u "${{ secrets.DOCKERHUB_USERNAME }}" \
            --password-stdin
      - uses: actions/checkout@v4
      - name: Build & Push core-service
        run: |
          IMAGE=fabiangpsproy/core-service:latest
          docker build \
            -f backend/apps/core-service/Dockerfile \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASS=${{ secrets.DB_PASS }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }} \
            --build-arg DB_POOL_MODE=${{ secrets.DB_POOL_MODE }} \
            --build-arg PORT_CORE=${{ secrets.PORT_CORE }} \
            --build-arg SCHEMA_CORE=${{ secrets.SCHEMA_CORE }} \
            -t $IMAGE \
            backend/
          docker push $IMAGE

  build-clinical-service:
    needs: docker-login
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
            -u "${{ secrets.DOCKERHUB_USERNAME }}" \
            --password-stdin
      - uses: actions/checkout@v4
      - name: Build & Push clinical-service
        run: |
          IMAGE=fabiangpsproy/clinical-service:latest
          docker build \
            -f backend/apps/clinical-service/Dockerfile \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASS=${{ secrets.DB_PASS }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }} \
            --build-arg DB_POOL_MODE=${{ secrets.DB_POOL_MODE }} \
            --build-arg PORT_CLINICAL=${{ secrets.PORT_CLINICAL }} \
            --build-arg SCHEMA_CLINICAL=${{ secrets.SCHEMA_CLINICAL }} \
            -t $IMAGE \
            backend/
          docker push $IMAGE

  build-nutrition-service:
    needs: docker-login
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
            -u "${{ secrets.DOCKERHUB_USERNAME }}" \
            --password-stdin
      - uses: actions/checkout@v4
      - name: Build & Push nutrition-service
        run: |
          IMAGE=fabiangpsproy/nutrition-service:latest
          docker build \
            -f backend/apps/nutrition-service/Dockerfile \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASS=${{ secrets.DB_PASS }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }} \
            --build-arg DB_POOL_MODE=${{ secrets.DB_POOL_MODE }} \
            --build-arg PORT_NUTRITION=${{ secrets.PORT_NUTRITION }} \
            --build-arg SCHEMA_NUTRITION=${{ secrets.SCHEMA_NUTRITION }} \
            -t $IMAGE \
            backend/
          docker push $IMAGE

  build-odonto-service:
    needs: docker-login
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
            -u "${{ secrets.DOCKERHUB_USERNAME }}" \
            --password-stdin
      - uses: actions/checkout@v4
      - name: Build & Push odonto-service
        run: |
          IMAGE=fabiangpsproy/odonto-service:latest
          docker build \
            -f backend/apps/odonto-service/Dockerfile \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASS=${{ secrets.DB_PASS }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }} \
            --build-arg DB_POOL_MODE=${{ secrets.DB_POOL_MODE }} \
            --build-arg PORT_ODONTO=${{ secrets.PORT_ODONTO }} \
            --build-arg SCHEMA_ODONTO=${{ secrets.SCHEMA_ODONTO }} \
            -t $IMAGE \
            backend/
          docker push $IMAGE

  build-patient-service:
    needs: docker-login
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
            -u "${{ secrets.DOCKERHUB_USERNAME }}" \
            --password-stdin
      - uses: actions/checkout@v4
      - name: Build & Push patient-service
        run: |
          IMAGE=fabiangpsproy/patient-service:latest
          docker build \
            -f backend/apps/patient-service/Dockerfile \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASS=${{ secrets.DB_PASS }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }} \
            --build-arg DB_POOL_MODE=${{ secrets.DB_POOL_MODE }} \
            --build-arg PORT_PATIENT=${{ secrets.PORT_PATIENT }} \
            --build-arg SCHEMA_PATIENT=${{ secrets.SCHEMA_PATIENT }} \
            -t $IMAGE \
            backend/
          docker push $IMAGE

  build-pharmacy-service:
    needs: docker-login
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
            -u "${{ secrets.DOCKERHUB_USERNAME }}" \
            --password-stdin
      - uses: actions/checkout@v4
      - name: Build & Push pharmacy-service
        run: |
          IMAGE=fabiangpsproy/pharmacy-service:latest
          docker build \
            -f backend/apps/pharmacy-service/Dockerfile \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASS=${{ secrets.DB_PASS }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }} \
            --build-arg DB_POOL_MODE=${{ secrets.DB_POOL_MODE }} \
            --build-arg PORT_PHARMACY=${{ secrets.PORT_PHARMACY }} \
            --build-arg SCHEMA_PHARMACY=${{ secrets.SCHEMA_PHARMACY }} \
            -t $IMAGE \
            backend/
          docker push $IMAGE

  build-vaccination-service:
    needs: docker-login
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
            -u "${{ secrets.DOCKERHUB_USERNAME }}" \
            --password-stdin
      - uses: actions/checkout@v4
      - name: Build & Push vaccination-service
        run: |
          IMAGE=fabiangpsproy/vaccination-service:latest
          docker build \
            -f backend/apps/vaccination-service/Dockerfile \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASS=${{ secrets.DB_PASS }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME }} \
            --build-arg DB_POOL_MODE=${{ secrets.DB_POOL_MODE }} \
            --build-arg PORT_VACCINATION=${{ secrets.PORT_VACCINATION }} \
            --build-arg SCHEMA_VACCINATION=${{ secrets.SCHEMA_VACCINATION }} \
            -t $IMAGE \
            backend/
          docker push $IMAGE

  # 3) Build & Push del frontend
  build-frontend:
    needs: docker-login
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
            -u "${{ secrets.DOCKERHUB_USERNAME }}" \
            --password-stdin
      - uses: actions/checkout@v4
      - name: Build & Push Frontend
        run: |
          IMAGE=fabiangpsproy/frontend:latest
          docker build \
            -f frontend/Dockerfile \
            --build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} \
            --build-arg NEXT_PUBLIC_SESSION_DURATION=${{ secrets.NEXT_PUBLIC_SESSION_DURATION }} \
            -t $IMAGE \
            frontend/
          docker push $IMAGE
